generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model address {
  addressid   Int           @id @default(autoincrement())
  userid      Int?
  street      String?       @db.VarChar(100)
  city        String?       @db.VarChar(50)
  state       String?       @db.VarChar(50)
  country     String?       @db.VarChar(50)
  postalcode  String?       @db.VarChar(20)
  users       users?        @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  transaction transaction[]
}

model category {
  categoryid Int       @id @default(autoincrement())
  name       String    @db.VarChar(50)
  product    product[]
}

model paymentmethod {
  paymentmethodid Int           @id @default(autoincrement())
  name            String        @db.VarChar(50)
  transaction     transaction[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product {
  productid         Int                 @id @default(autoincrement())
  name              String              @db.VarChar(50)
  description       String?             @db.VarChar(1000)
  price             Decimal             @db.Decimal(10, 2)
  stock             Int
  categoryid        Int
  sellerid          Int
  discount          Decimal?            @default(0) @db.Decimal(5, 2)
  isactive          Boolean?            @default(true)
  createdate        DateTime?           @default(now()) @db.Timestamp(6)
  updateat          DateTime?           @db.Timestamp(6)
  brand             String?             @db.VarChar(100)
  condition         String?
  image             String[]            @default([])
  category          category            @relation(fields: [categoryid], references: [categoryid], onDelete: NoAction, onUpdate: NoAction)
  users             users               @relation(fields: [sellerid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  productreview     productreview[]
  rentalrates       rentalrates[]
  transactiondetail transactiondetail[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model productreview {
  reviewid    Int       @id @default(autoincrement())
  productid   Int?
  customerid  Int?
  rating      Int?
  review      String?   @db.VarChar(1000)
  reviewphoto Bytes?
  createdate  DateTime? @default(now()) @db.Timestamp(6)
  users       users?    @relation(fields: [customerid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  product     product?  @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction)
}

model rentalrates {
  rentalrateid Int      @id @default(autoincrement())
  productid    Int
  dailyrate    Decimal? @db.Decimal(10, 2)
  weeklyrate   Decimal? @db.Decimal(10, 2)
  monthlyrate  Decimal? @db.Decimal(10, 2)
  product      product  @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction)
}

model transaction {
  transactionid                     Int                 @id @default(autoincrement())
  buyerid                           Int
  sellerid                          Int
  transactiondate                   DateTime?           @default(now()) @db.Timestamp(6)
  status                            String?             @default("Completed") @db.VarChar(20)
  startdate                         DateTime?           @db.Timestamp(6)
  enddate                           DateTime?           @db.Timestamp(6)
  paymentmethodid                   Int
  shippingaddressid                 Int
  shippingstatus                    String?             @default("Pending") @db.VarChar(20)
  returnstatus                      String?             @default("Pending") @db.VarChar(20)
  users_transaction_buyeridTousers  users               @relation("transaction_buyeridTousers", fields: [buyerid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  paymentmethod                     paymentmethod       @relation(fields: [paymentmethodid], references: [paymentmethodid], onDelete: NoAction, onUpdate: NoAction)
  users_transaction_selleridTousers users               @relation("transaction_selleridTousers", fields: [sellerid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  address                           address             @relation(fields: [shippingaddressid], references: [addressid], onDelete: NoAction, onUpdate: NoAction)
  transactiondetail                 transactiondetail[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactiondetail {
  transactionid   Int
  productid       Int
  quantity        Int
  price           Decimal?    @db.Decimal(10, 2)
  discount        Decimal?    @default(0) @db.Decimal(5, 2)
  subtotal        Decimal?    @db.Decimal(10, 2)
  rentalstartdate DateTime?   @db.Timestamp(6)
  rentalenddate   DateTime?   @db.Timestamp(6)
  ratetype        String?     @db.VarChar(10)
  product         product     @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction)
  transaction     transaction @relation(fields: [transactionid], references: [transactionid], onDelete: NoAction, onUpdate: NoAction)

  @@id([transactionid, productid])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  userid                                  Int             @id @default(autoincrement())
  name                                    String          @db.VarChar(50)
  lastname                                String          @db.VarChar(50)
  email                                   String          @unique @db.VarChar(100)
  phonenumber                             String?         @db.VarChar(50)
  photo                                   Bytes?
  birthdate                               DateTime?       @db.Date
  password                                String          @db.VarChar(255)
  rol                                     Int
  username                                String          @db.VarChar(50)
  refresh_token                           String?
  address                                 address[]
  product                                 product[]
  productreview                           productreview[]
  transaction_transaction_buyeridTousers  transaction[]   @relation("transaction_buyeridTousers")
  transaction_transaction_selleridTousers transaction[]   @relation("transaction_selleridTousers")
}
